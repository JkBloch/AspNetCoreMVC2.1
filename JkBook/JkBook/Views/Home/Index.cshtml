@{
    var bookInfo = ViewData["bookdetail"] as BookModel;
    dynamic data = ViewBag.data;
    ViewData["Title"] = "Home";
    var mybook = ViewData["book"] as BookModel;
}

@inject JkBook.Repository.IBookRepository _bookRepository


<section class="jumbotron text-center">
    <div class="container">
        <h1>Welcome to Bookstore </h1>
        <div class="container">
            @using (Html.BeginForm())
            {
                <input type="text" name="toEmailId" class="form-control" />
                <button type="submit" class="btn btn-warning" asp-controller="Home" asp-action="SendEmailToUser" >Send Email</button>
            }

        </div>
        <p class="p-2">
            @ViewBag.AppSettingData
        </p>
        <p class="p-2">
            ViewBag Example : - &nbsp;&nbsp;
            @ViewBag.Name
            &nbsp;
            @ViewBag.jdata
            &nbsp;
            @data.Id
            &nbsp;
            @data.Title
            &nbsp;
            @ViewBag.Type.Id
            &nbsp;
            @ViewBag.Type.Author

        </p>
        <p class="p-2">
            ViewData Example : - &nbsp;&nbsp;
            @ViewData["Name"]
            &nbsp;
            @bookInfo.Id
            &nbsp;
            @bookInfo.Title
            &nbsp;
            @bookInfo.Author

        </p>
        <p class="p-2">
            ViewDataAttribute Example : - &nbsp;&nbsp;
            @ViewData["CustomProp"]
            &nbsp;
            @mybook.Id
            &nbsp;
            @mybook.Title
            &nbsp;
            @mybook.Author
        </p>
        <p class="lead text-muted">
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
            quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
        </p>
        <p>
            <a href="#" class="btn btn-primary my-2">Search books</a>

        </p>
        <div class="form-group">
            <select class="form-select">
                @foreach (var book in await _bookRepository.GetAllBooks())
                {
                    <option value="@book.Title">@book.Title</option>
                }
            </select>
        </div>
    </div>

</section>

<div>
    <div class="container">
        <h3 class="h3">Top Books</h3>
        <big>Top Books</big>
        <p big class="bg-primary">Top Books</p>
        @await Component.InvokeAsync("TopBooks", new { count = 5 }) <br />
        @*<vc:top-books count="3"></vc:top-books>*@

    </div>
</div>
<div class="alert alert-info alert-dismissible">
    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
    <strong>Info!</strong> This alert box could indicate a neutral informative change or action.
</div>

@*<div class="alert alert-warning alert-dismissible fade show" role="alert">
    <strong>Holy guacamole!</strong> You should check in on some of those fields below.
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>*@
@section scripts{
    <script>
        $(document).ready(function () {
            //alert("document is ready")
        })
    </script>
}

